defmodule Escher.Utils do
  @moduledoc """
  Common utilities
  """
  import Scenic.Primitives

  alias FuncGeo, as: F

  def initial_path do
    [
      :begin,
      {:move_to, 0, 0},
      {:line_to, 1, 0},
      {:line_to, 1, 1},
      {:line_to, 0, 1},
      {:line_to, 0, 0}
    ]
  end

  def path(image) do
    Enum.flat_map(image.({0, 0}, {1, 0}, {0, 1}), fn {{x0, y0}, {x1, y1}} ->
      [{:move_to, x0, y0}, {:line_to, x1, y1}]
    end)
  end

  def container(group, data, opts \\ []) do
    text = Keyword.get(opts, :text, "")
    font_size = Keyword.get(opts, :font_size, 24)

    group
    |> text(text,
      translate: {125, -20},
      fill: :black,
      font: :roboto_mono,
      text_align: :center,
      font_size: font_size
    )
    |> path(Enum.concat(initial_path(), path(data)),
      stroke: {0.003, :black},
      translate: {25, -50},
      scale: {200, -200}
    )
  end

  def grid(:f) do
    F.grid(
      7,
      7,
      F.polygon([{2, 1}, {2, 6}, {5, 6}, {5, 5}, {3, 5}, {3, 4}, {4, 4}, {4, 3}, {3, 3}, {3, 1}])
    )
  end

  def grid(:man) do
    F.grid(
      14,
      20,
      F.polygon([
        {6, 10},
        {0, 10},
        {0, 12},
        {6, 12},
        {6, 14},
        {4, 16},
        {4, 18},
        {6, 20},
        {8, 20},
        {10, 18},
        {10, 16},
        {8, 14},
        {8, 12},
        {10, 12},
        {10, 14},
        {12, 14},
        {12, 10},
        {8, 10},
        {8, 8},
        {10, 0},
        {8, 0},
        {7, 4},
        {6, 0},
        {4, 0},
        {6, 8}
      ])
    )
  end

  def grid(:p) do
    F.grid(16, 16, [
      {{4, 4}, {6, 0}},
      {{0, 3}, {3, 4}},
      {{3, 4}, {0, 8}},
      {{0, 8}, {0, 3}},
      {{4, 5}, {7, 6}},
      {{7, 6}, {4, 10}},
      {{4, 10}, {4, 5}},
      {{11, 0}, {10, 4}},
      {{10, 4}, {8, 8}},
      {{8, 8}, {4, 13}},
      {{4, 13}, {0, 16}},
      {{11, 0}, {14, 2}},
      {{14, 2}, {16, 2}},
      {{10, 4}, {13, 5}},
      {{13, 5}, {16, 4}},
      {{9, 6}, {12, 7}},
      {{12, 7}, {16, 6}},
      {{8, 8}, {12, 9}},
      {{12, 9}, {16, 8}},
      {{8, 12}, {16, 10}},
      {{0, 16}, {6, 15}},
      {{6, 15}, {8, 16}},
      {{8, 16}, {12, 12}},
      {{12, 12}, {16, 12}},
      {{10, 16}, {12, 14}},
      {{12, 14}, {16, 13}},
      {{12, 16}, {13, 15}},
      {{13, 15}, {16, 14}},
      {{14, 16}, {16, 15}}
    ])
  end

  def grid(:q) do
    F.grid(16, 16, [
      {{2, 0}, {4, 5}},
      {{4, 5}, {4, 7}},
      {{4, 0}, {6, 5}},
      {{6, 5}, {6, 7}},
      {{6, 0}, {8, 5}},
      {{8, 5}, {8, 8}},
      {{8, 0}, {10, 6}},
      {{10, 6}, {10, 9}},
      {{10, 0}, {14, 11}},
      {{12, 0}, {13, 4}},
      {{13, 4}, {16, 8}},
      {{16, 8}, {15, 10}},
      {{15, 10}, {16, 16}},
      {{16, 16}, {12, 10}},
      {{12, 10}, {6, 7}},
      {{6, 7}, {4, 7}},
      {{4, 7}, {0, 8}},
      {{13, 0}, {16, 6}},
      {{14, 0}, {16, 4}},
      {{15, 0}, {16, 2}},
      {{0, 10}, {7, 11}},
      {{9, 12}, {10, 10}},
      {{10, 10}, {12, 12}},
      {{12, 12}, {9, 12}},
      {{8, 15}, {9, 13}},
      {{9, 13}, {11, 15}},
      {{11, 15}, {8, 15}},
      {{0, 12}, {3, 13}},
      {{3, 13}, {7, 15}},
      {{7, 15}, {8, 16}},
      {{2, 16}, {3, 13}},
      {{4, 16}, {5, 14}},
      {{6, 16}, {7, 15}}
    ])
  end

  def grid(:r) do
    F.grid(16, 16, [
      {{0, 12}, {1, 14}},
      {{0, 8}, {2, 12}},
      {{0, 4}, {5, 10}},
      {{0, 0}, {8, 8}},
      {{1, 1}, {4, 0}},
      {{2, 2}, {8, 0}},
      {{3, 3}, {8, 2}},
      {{8, 2}, {12, 0}},
      {{5, 5}, {12, 3}},
      {{12, 3}, {16, 0}},
      {{0, 16}, {2, 12}},
      {{2, 12}, {8, 8}},
      {{8, 8}, {14, 6}},
      {{14, 6}, {16, 4}},
      {{6, 16}, {11, 10}},
      {{11, 10}, {16, 6}},
      {{11, 16}, {12, 12}},
      {{12, 12}, {16, 8}},
      {{12, 12}, {16, 16}},
      {{13, 13}, {16, 10}},
      {{14, 14}, {16, 12}},
      {{15, 15}, {16, 14}}
    ])
  end

  def grid(:s) do
    F.grid(16, 16, [
      {{0, 0}, {4, 2}},
      {{4, 2}, {8, 2}},
      {{8, 2}, {16, 0}},
      {{0, 4}, {2, 1}},
      {{0, 6}, {7, 4}},
      {{0, 8}, {8, 6}},
      {{0, 10}, {7, 8}},
      {{0, 12}, {7, 10}},
      {{0, 14}, {7, 13}},
      {{8, 16}, {7, 13}},
      {{7, 13}, {7, 8}},
      {{7, 8}, {8, 6}},
      {{8, 6}, {10, 4}},
      {{10, 4}, {16, 0}},
      {{10, 16}, {11, 10}},
      {{10, 6}, {12, 4}},
      {{12, 4}, {12, 7}},
      {{12, 7}, {10, 6}},
      {{13, 7}, {15, 5}},
      {{15, 5}, {15, 8}},
      {{15, 8}, {13, 7}},
      {{12, 16}, {13, 13}},
      {{13, 13}, {15, 9}},
      {{15, 9}, {16, 8}},
      {{13, 13}, {16, 14}},
      {{14, 11}, {16, 12}},
      {{15, 9}, {16, 10}}
    ])
  end
end
